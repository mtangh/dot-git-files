---
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

language: minimal

# Use the new container infrastructure
sudo: false

# Install packages
install: true

# Run
script:

  # Git files update
  - |
    rm -rf ~/.config/git || :
    mkdir -p ~/.config/git
    bash -n update.sh &&
    bash -n gitfilesupdate.sh &&
    bash gitfilesupdate.sh -g &&
    [ -r "~/.config/git/ignore" ] &&
    [ -r "~/.config/git/attributes" ] &&
    [ ! -r "~/.config/git/config" ] &&
    [ ! -r "~/.config/git/config.local.tmplt" ] &&
    : "OK"
  - |
    rm -rf ~/.config/git || :
    mkdir -p ~/.config/git
    bash -n update.sh &&
    bash -n gitfilesupdate.sh &&
    bash gitfilesupdate.sh -g -c &&
    [ -r "~/.config/git/ignore" ] &&
    [ -r "~/.config/git/attributes" ] &&
    [ -r "~/.config/git/config" ] &&
    [ -r "~/.config/git/config.local.tmplt" ] &&
    : "OK"

  # Gitkeep
  - |
    bash -n gitkeep.sh &&
    bash gitkeep.sh |
    egrep -i " Gitkeep directory '.'."
  - |
    bash -n gitkeep.sh &&
    bash gitkeep.sh /tmp |
    egrep -i " Gitkeep directory '/tmp'."
  - |
    bash -n gitkeep.sh &&
    mkdir -p /tmp/gitkeep-test/{empty,not-empty} &&
    cd "/tmp/gitkeep-test" && {
      touch not-empty/file.txt &&
      bash gitkeep.sh &&
      [ -r "empty/.gitkeep" ] &&
      [ ! -r "not-empty/.gitkeep" ] &&
      mv -f not-empty/file.txt empty/ &&
      bash gitkeep.sh --rebuild &&
      [ ! -r "empty/.gitkeep" ] &&
      [ -r "not-empty/.gitkeep" ] &&
      : "OK"
    };

# Notifications
#notifications:
#  email:
#  - your@emailaddress

