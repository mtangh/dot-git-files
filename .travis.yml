---
# vim: set ff=unix ts=2 sw=2 sts=2 et : This line is VIM modeline

language: minimal

# Use the new container infrastructure
sudo: false

# Install packages
install: true

# Run
script:

  # Git files update
  - |
    gitconf_dir="${HOME}/.config/git"
    bash -n update.sh &&
    bash -n gitfilesupdate.sh &&
    : "With -g" && {
      rm -rf "${gitconf_dir}" || :
      mkdir -p "${gitconf_dir}" &&
      bash -- gitfilesupdate.sh -g &&
      [ -r "${gitconf_dir}/ignore" ] &&
      [ -r "${gitconf_dir}/attributes" ] &&
      [ ! -r "${gitconf_dir}/config" ] &&
      [ ! -r "${gitconf_dir}/config.local.tmplt" ] &&
      : "OK"
    } &&
    : "With -g and -c" && {
      rm -rf "${gitconf_dir}" || :
      mkdir -p "${gitconf_dir}" &&
      bash -- gitfilesupdate.sh -g &&
      [ -r "${gitconf_dir}/ignore" ] &&
      [ -r "${gitconf_dir}/attributes" ] &&
      [ -r "${gitconf_dir}/config" ] &&
      [ -r "${gitconf_dir}/config.local.tmplt" ] &&
      : "OK"
    }

  # Gitkeep
  - |
    base_dir=$(pwd)
    bash -n gitkeep.sh &&
    mkdir -p t/{dir1,dir2,dir3/child1,dir3/child2} &&
    : "" && {
      find t -type f -exec rm -f {} \; || :
      touch t/dir1/file1.txt t/dir3/child1/file2.txt &&
      bash -- "${base_dir}/gitkeep.sh" ./t &&
      [ -r "t/dir/.gitkeep" ] &&
      [ ! -r "not-empty/.gitkeep" ] &&
      mv -f not-empty/file.txt empty/ &&
      bash -- "${base_dir}/gitkeep.sh" --rebuild &&
      [ ! -r "empty/.gitkeep" ] &&
      [ -r "not-empty/.gitkeep" ] &&
      : "OK"
    }

# Notifications
#notifications:
#  email:
#  - your@emailaddress

